"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var RTE = __importStar(require("../ReaderTaskEither"));
var prompts_1 = require("../prompts");
var function_1 = require("fp-ts/lib/function");
var Console_1 = require("fp-ts/lib/Console");
var descriptions_1 = require("../Config/descriptions");
// -----------------------------------------------------------------------------
// util
// -----------------------------------------------------------------------------
var prompts = function_1.flow(prompts_1.prompts, RTE.fromTaskEither);
// -----------------------------------------------------------------------------
// effect
// -----------------------------------------------------------------------------
var getName = RTE.scope(function (_a) {
    var name = _a.config.name;
    return prompts({
        type: 'text',
        initial: name,
        message: descriptions_1.descriptions.name,
    });
});
var getPackageManager = RTE.scope(function (_a) {
    var packageManager = _a.config.packageManager;
    return prompts({
        type: 'select',
        initial: { yarn: 0, npm: 1 }[packageManager],
        message: descriptions_1.descriptions.packageManager,
        choices: [
            { title: 'Yarn', value: 'yarn' },
            { title: 'NPM', value: 'npm' },
        ],
    });
});
var getInPlace = RTE.scope(function (_a) {
    var inPlace = _a.config.inPlace;
    return prompts({
        type: 'toggle',
        message: descriptions_1.descriptions.inPlace,
        initial: inPlace,
        active: 'yes',
        inactive: 'no',
    });
});
var getHomepage = RTE.scope(function (_a) {
    var homepage = _a.config.homepage;
    return prompts({
        type: 'text',
        message: descriptions_1.descriptions.homepage,
        initial: homepage,
    });
});
var getHomepageAPI = RTE.scope(function (_a) {
    var homepageAPI = _a.config.homepageAPI;
    return prompts({
        type: 'text',
        message: descriptions_1.descriptions.homepageAPI,
        initial: homepageAPI,
    });
});
var getProjectVersion = RTE.scope(function (_a) {
    var projectVersion = _a.config.projectVersion;
    return prompts({
        type: 'text',
        message: descriptions_1.descriptions.projectVersion,
        initial: projectVersion,
    });
});
var getLicense = RTE.scope(function (_a) {
    var license = _a.config.license;
    return prompts({
        type: 'text',
        message: descriptions_1.descriptions.license,
        initial: license,
    });
});
var getPrettier = RTE.scope(function (_a) {
    var prettier = _a.config.prettier;
    return prompts({
        type: 'toggle',
        message: descriptions_1.descriptions.prettier,
        initial: prettier,
        active: 'yes',
        inactive: 'no',
    });
});
var getEsLint = RTE.scope(function (_a) {
    var eslint = _a.config.eslint;
    return prompts({
        type: 'toggle',
        message: descriptions_1.descriptions.eslint,
        initial: eslint,
        active: 'yes',
        inactive: 'no',
    });
});
var getJest = RTE.scope(function (_a) {
    var jest = _a.config.jest;
    return prompts({
        type: 'toggle',
        message: descriptions_1.descriptions.jest,
        initial: jest,
        active: 'yes',
        inactive: 'no',
    });
});
var getFastCheck = RTE.scope(function (_a) {
    var fastCheck = _a.config.fastCheck;
    return prompts({
        type: 'toggle',
        message: descriptions_1.descriptions.fastCheck,
        initial: fastCheck,
        active: 'yes',
        inactive: 'no',
    });
});
var getDocsTs = RTE.scope(function (_a) {
    var docsTs = _a.config.docsTs;
    return prompts({
        type: 'toggle',
        message: descriptions_1.descriptions.docsTs,
        initial: docsTs,
        active: 'yes',
        inactive: 'no',
    });
});
var getGhActions = RTE.scope(function (_a) {
    var ghActions = _a.config.ghActions;
    return prompts({
        type: 'toggle',
        message: descriptions_1.descriptions.ghActions,
        initial: ghActions,
        active: 'yes',
        inactive: 'no',
    });
});
var getMarkdownMagic = RTE.scope(function (_a) {
    var markdownMagic = _a.config.markdownMagic;
    return prompts({
        type: 'toggle',
        message: descriptions_1.descriptions.markdownMagic,
        initial: markdownMagic,
        active: 'yes',
        inactive: 'no',
    });
});
var getVscode = RTE.scope(function (_a) {
    var vscode = _a.config.vscode;
    return prompts({
        type: 'toggle',
        message: descriptions_1.descriptions.vscode,
        initial: vscode,
        active: 'yes',
        inactive: 'no',
    });
});
var getCspell = RTE.scope(function (_a) {
    var cspell = _a.config.cspell;
    return prompts({
        type: 'toggle',
        message: descriptions_1.descriptions.cspell,
        initial: cspell,
        active: 'yes',
        inactive: 'no',
    });
});
var getRunInstall = RTE.scope(function (_a) {
    var runInstall = _a.config.runInstall;
    return prompts({
        type: 'toggle',
        message: descriptions_1.descriptions.runInstall,
        initial: runInstall,
        active: 'yes',
        inactive: 'no',
    });
});
var confirm = function (_a) {
    var name = _a.name;
    return function_1.pipe(prompts({
        type: 'confirm',
        message: "ready to setup project in folder `" + name + "`?",
        initial: true,
    }), RTE.chain(function (confirmed) {
        return confirmed ? RTE.of(function_1.constVoid()) : RTE.left('Aborted by user');
    }));
};
var main = function_1.pipe(RTE.Do, RTE.bind('name', function () { return getName; }), RTE.bind('inPlace', function () { return getInPlace; }), RTE.bind('homepage', function () { return getHomepage; }), RTE.bind('homepageAPI', function () { return getHomepageAPI; }), RTE.bind('projectVersion', function () { return getProjectVersion; }), RTE.bind('license', function () { return getLicense; }), RTE.bind('packageManager', function () { return getPackageManager; }), RTE.bind('prettier', function () { return getPrettier; }), RTE.bind('eslint', function () { return getEsLint; }), RTE.bind('jest', function () { return getJest; }), RTE.bind('fastCheck', function () { return getFastCheck; }), RTE.bind('docsTs', function () { return getDocsTs; }), RTE.bind('ghActions', function () { return getGhActions; }), RTE.bind('vscode', function () { return getVscode; }), RTE.bind('markdownMagic', function () { return getMarkdownMagic; }), RTE.bind('cspell', function () { return getCspell; }), RTE.bind('runInstall', function () { return getRunInstall; }), RTE.chainFirst(function () { return RTE.fromIO(Console_1.log('')); }), RTE.chainFirst(function (_a) {
    var name = _a.name;
    return confirm({ name: name });
}));
// -----------------------------------------------------------------------------
// export
// -----------------------------------------------------------------------------
exports.default = main;
