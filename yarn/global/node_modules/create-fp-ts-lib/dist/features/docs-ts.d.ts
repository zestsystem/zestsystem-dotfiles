import { Extends } from '../type-utils';
import { FileObj, FileObjects } from '../FileObj';
import { Capabilities } from '../Capabilities';
import { Config } from '../Config/type';
import { ReaderTaskEither } from 'fp-ts/lib/ReaderTaskEither';
declare type Env = {
    cap: Capabilities;
    config: Config;
    files: InFiles;
};
declare type Error = string;
declare type Effect<A> = ReaderTaskEither<Env, Error, A>;
declare type InFiles = Extends<Record<string, FileObj>, {
    'package.json': FileObjects['PackageJson'];
    '.gitignore': FileObjects['Text'];
}>;
declare type OutFiles = Extends<Record<string, FileObj>, {
    'package.json': FileObjects['PackageJson'];
    '.gitignore': FileObjects['Text'];
}>;
declare const main: Effect<OutFiles>;
export default main;
