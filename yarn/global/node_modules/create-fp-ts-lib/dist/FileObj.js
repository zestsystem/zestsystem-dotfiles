"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.print = void 0;
var type_utils_1 = require("./type-utils");
var J = __importStar(require("./Json"));
var prettier_config_1 = require("./prettier-config");
var function_1 = require("fp-ts/lib/function");
var P = __importStar(require("prettier"));
var Y = __importStar(require("yaml"));
// -----------------------------------------------------------------------------
// util
// -----------------------------------------------------------------------------
var printJson = function_1.flow(J.print, function (str) {
    return P.format(str, __assign(__assign({}, prettier_config_1.prettierConfig), { parser: 'json' }));
});
var printYaml = function_1.flow(function (val) { return Y.stringify(val); }, function (str) { return P.format(str, __assign(__assign({}, prettier_config_1.prettierConfig), { parser: 'yaml' })); });
var printText = function (lines) { return lines.join('\n'); };
// -----------------------------------------------------------------------------
// fns
// -----------------------------------------------------------------------------
var print = function (x) {
    return type_utils_1.match(x, {
        Text: function (d) { return printText(d.data); },
        Json: function (d) { return printJson(d.data); },
        PackageJson: function (d) { return printJson(d.data); },
        Yaml: function (d) { return printYaml(d.data); },
    });
};
exports.print = print;
